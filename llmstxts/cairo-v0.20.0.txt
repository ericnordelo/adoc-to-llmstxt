# OpenZeppelin Contracts for Cairo

> OpenZeppelin Contracts written in Cairo for Starknet, a decentralized ZK Rollup.

A library for secure smart contract development written in Cairo for Starknet. This library consists of a set of reusable components to build custom smart contracts, as well as ready-to-deploy presets. You can also find other utilities including interfaces and dispatchers and test utilities that facilitate testing with Starknet Foundry.

## Documentation

[Overview](https://docs.openzeppelin.com/contracts-cairo/0.10.0/index)
[Wizard](https://docs.openzeppelin.com/contracts-cairo/0.10.0/wizard)
[Components](https://docs.openzeppelin.com/contracts-cairo/0.10.0/components)
[Presets](https://docs.openzeppelin.com/contracts-cairo/0.10.0/presets)
[Interfaces and Dispatchers](https://docs.openzeppelin.com/contracts-cairo/0.10.0/interfaces)
[Counterfactual Deployments](https://docs.openzeppelin.com/contracts-cairo/0.10.0/guides/deployment)
[SNIP12 and Typed Messages](https://docs.openzeppelin.com/contracts-cairo/0.10.0/guides/snip12)
[Access](https://docs.openzeppelin.com/contracts-cairo/0.10.0/access): Describes different forms of access control, including ownership and role-based access.
[Accounts](https://docs.openzeppelin.com/contracts-cairo/0.10.0/accounts)
[Finance](https://docs.openzeppelin.com/contracts-cairo/0.10.0/finance)
[Governor](https://docs.openzeppelin.com/contracts-cairo/0.10.0/governance/governor)
[Multisig](https://docs.openzeppelin.com/contracts-cairo/0.10.0/governance/multisig)
[Timelock Controller](https://docs.openzeppelin.com/contracts-cairo/0.10.0/governance/timelock)
[Votes](https://docs.openzeppelin.com/contracts-cairo/0.10.0/governance/votes)
[Introspection](https://docs.openzeppelin.com/contracts-cairo/0.10.0/introspection)
[Migrating ERC165 to SRC5](https://docs.openzeppelin.com/contracts-cairo/0.10.0/guides/src5-migration)
[Security](https://docs.openzeppelin.com/contracts-cairo/0.10.0/security)
[ERC20](https://docs.openzeppelin.com/contracts-cairo/0.10.0/erc20)
[Creating Supply](https://docs.openzeppelin.com/contracts-cairo/0.10.0/guides/erc20-supply)
[ERC20Permit](https://docs.openzeppelin.com/contracts-cairo/0.10.0/guides/erc20-permit)
[ERC721](https://docs.openzeppelin.com/contracts-cairo/0.10.0/erc721)
[ERC1155](https://docs.openzeppelin.com/contracts-cairo/0.10.0/erc1155)
[Universal Deployer Contract](https://docs.openzeppelin.com/contracts-cairo/0.10.0/udc)
[Upgrades](https://docs.openzeppelin.com/contracts-cairo/0.10.0/upgrades)
[Backwards Compatibility](https://docs.openzeppelin.com/contracts-cairo/0.10.0/backwards-compatibility)

## API Reference

[Access Control API Reference](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/access)
[Account API Reference](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/account)
[Finance API Reference](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/finance)
[Governance API Reference](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/governance)
[Introspection API Reference](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/introspection)
[Merkle Tree](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/merkle-tree)
[Security API Reference](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/security)
[ERC20 API Reference](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/erc20)
[ERC721 API Reference](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/erc721)
[ERC1155 API Reference](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/erc1155)
[Common](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/token_common)
[Universal Deployer API Reference](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/udc)
[Upgrades API Reference](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/upgrades)
[Utilities](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/utilities)
[Test Utilities](https://docs.openzeppelin.com/contracts-cairo/0.10.0/api/testing)

